# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_t2tsw', [dirname(__file__)])
        except ImportError:
            import _t2tsw
            return _t2tsw
        if fp is not None:
            try:
                _mod = imp.load_module('_t2tsw', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _t2tsw = swig_import_helper()
    del swig_import_helper
else:
    import _t2tsw
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def new_doublep():
  return _t2tsw.new_doublep()
new_doublep = _t2tsw.new_doublep

def copy_doublep(*args):
  return _t2tsw.copy_doublep(*args)
copy_doublep = _t2tsw.copy_doublep

def delete_doublep(*args):
  return _t2tsw.delete_doublep(*args)
delete_doublep = _t2tsw.delete_doublep

def doublep_assign(*args):
  return _t2tsw.doublep_assign(*args)
doublep_assign = _t2tsw.doublep_assign

def doublep_value(*args):
  return _t2tsw.doublep_value(*args)
doublep_value = _t2tsw.doublep_value

def new_charp():
  return _t2tsw.new_charp()
new_charp = _t2tsw.new_charp

def copy_charp(*args):
  return _t2tsw.copy_charp(*args)
copy_charp = _t2tsw.copy_charp

def delete_charp(*args):
  return _t2tsw.delete_charp(*args)
delete_charp = _t2tsw.delete_charp

def charp_assign(*args):
  return _t2tsw.charp_assign(*args)
charp_assign = _t2tsw.charp_assign

def charp_value(*args):
  return _t2tsw.charp_value(*args)
charp_value = _t2tsw.charp_value
class doubleArrayC(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, doubleArrayC, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, doubleArrayC, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _t2tsw.new_doubleArrayC(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_doubleArrayC
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _t2tsw.doubleArrayC___getitem__(self, *args)
    def __setitem__(self, *args): return _t2tsw.doubleArrayC___setitem__(self, *args)
    def cast(self): return _t2tsw.doubleArrayC_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _t2tsw.doubleArrayC_frompointer
    if _newclass:frompointer = staticmethod(_t2tsw.doubleArrayC_frompointer)
doubleArrayC_swigregister = _t2tsw.doubleArrayC_swigregister
doubleArrayC_swigregister(doubleArrayC)

def doubleArrayC_frompointer(*args):
  return _t2tsw.doubleArrayC_frompointer(*args)
doubleArrayC_frompointer = _t2tsw.doubleArrayC_frompointer


def new_doubleArray(*args):
  return _t2tsw.new_doubleArray(*args)
new_doubleArray = _t2tsw.new_doubleArray

def delete_doubleArray(*args):
  return _t2tsw.delete_doubleArray(*args)
delete_doubleArray = _t2tsw.delete_doubleArray

def doubleArray_getitem(*args):
  return _t2tsw.doubleArray_getitem(*args)
doubleArray_getitem = _t2tsw.doubleArray_getitem

def doubleArray_setitem(*args):
  return _t2tsw.doubleArray_setitem(*args)
doubleArray_setitem = _t2tsw.doubleArray_setitem

def new_charpArray(*args):
  return _t2tsw.new_charpArray(*args)
new_charpArray = _t2tsw.new_charpArray

def delete_charpArray(*args):
  return _t2tsw.delete_charpArray(*args)
delete_charpArray = _t2tsw.delete_charpArray

def charpArray_getitem(*args):
  return _t2tsw.charpArray_getitem(*args)
charpArray_getitem = _t2tsw.charpArray_getitem

def charpArray_setitem(*args):
  return _t2tsw.charpArray_setitem(*args)
charpArray_setitem = _t2tsw.charpArray_setitem

def malloc_double(*args):
  return _t2tsw.malloc_double(*args)
malloc_double = _t2tsw.malloc_double

def calloc_double(*args):
  return _t2tsw.calloc_double(*args)
calloc_double = _t2tsw.calloc_double

def realloc_double(*args):
  return _t2tsw.realloc_double(*args)
realloc_double = _t2tsw.realloc_double

def free_double(*args):
  return _t2tsw.free_double(*args)
free_double = _t2tsw.free_double
sizeof_double = _t2tsw.sizeof_double

def malloc_charp(*args):
  return _t2tsw.malloc_charp(*args)
malloc_charp = _t2tsw.malloc_charp

def calloc_charp(*args):
  return _t2tsw.calloc_charp(*args)
calloc_charp = _t2tsw.calloc_charp

def realloc_charp(*args):
  return _t2tsw.realloc_charp(*args)
realloc_charp = _t2tsw.realloc_charp

def free_charp(*args):
  return _t2tsw.free_charp(*args)
free_charp = _t2tsw.free_charp
sizeof_charp = _t2tsw.sizeof_charp
CMD_GET_SAMPLE = _t2tsw.CMD_GET_SAMPLE
CMD_GET_SAMPLE_EXT = _t2tsw.CMD_GET_SAMPLE_EXT
CMD_DEMO = _t2tsw.CMD_DEMO
CMD_CONNECT = _t2tsw.CMD_CONNECT
CMD_START_CALIBRATION = _t2tsw.CMD_START_CALIBRATION
CMD_ADD_CALIBRATION_POINT = _t2tsw.CMD_ADD_CALIBRATION_POINT
CMD_CALIBRATION_ANALYSIS = _t2tsw.CMD_CALIBRATION_ANALYSIS
CMD_REMOVE_CALIBRATION_SAMPLES = _t2tsw.CMD_REMOVE_CALIBRATION_SAMPLES
CMD_DREW_POINT = _t2tsw.CMD_DREW_POINT
CMD_START_TRACKING = _t2tsw.CMD_START_TRACKING
CMD_SYNCHRONISE = _t2tsw.CMD_SYNCHRONISE
CMD_START_AUTO_SYNC = _t2tsw.CMD_START_AUTO_SYNC
CMD_STOP_AUTO_SYNC = _t2tsw.CMD_STOP_AUTO_SYNC
CMD_EVENT = _t2tsw.CMD_EVENT
CMD_RECORD = _t2tsw.CMD_RECORD
CMD_STOP_RECORD = _t2tsw.CMD_STOP_RECORD
CMD_GET_EVENTS_DATA = _t2tsw.CMD_GET_EVENTS_DATA
CMD_GET_GAZES_DATA = _t2tsw.CMD_GET_GAZES_DATA
CMD_SAVE_DATA = _t2tsw.CMD_SAVE_DATA
CMD_CLEAR_DATA = _t2tsw.CMD_CLEAR_DATA
CMD_CLEAR_HISTORY = _t2tsw.CMD_CLEAR_HISTORY
CMD_STOP_TRACKING = _t2tsw.CMD_STOP_TRACKING
CMD_DISCONNECT = _t2tsw.CMD_DISCONNECT
CMD_GET_STATUS = _t2tsw.CMD_GET_STATUS
CMD_CLEANUP = _t2tsw.CMD_CLEANUP
CMD_TIMESTAMP = _t2tsw.CMD_TIMESTAMP
SAVE_DATA_APPEND = _t2tsw.SAVE_DATA_APPEND
SAVE_DATA_TRUNK = _t2tsw.SAVE_DATA_TRUNK
class bmatrix_double(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bmatrix_double, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bmatrix_double, name)
    __repr__ = _swig_repr
    __swig_setmethods__["vals"] = _t2tsw.bmatrix_double_vals_set
    __swig_getmethods__["vals"] = _t2tsw.bmatrix_double_vals_get
    if _newclass:vals = _swig_property(_t2tsw.bmatrix_double_vals_get, _t2tsw.bmatrix_double_vals_set)
    __swig_setmethods__["cols"] = _t2tsw.bmatrix_double_cols_set
    __swig_getmethods__["cols"] = _t2tsw.bmatrix_double_cols_get
    if _newclass:cols = _swig_property(_t2tsw.bmatrix_double_cols_get, _t2tsw.bmatrix_double_cols_set)
    __swig_setmethods__["rows"] = _t2tsw.bmatrix_double_rows_set
    __swig_getmethods__["rows"] = _t2tsw.bmatrix_double_rows_get
    if _newclass:rows = _swig_property(_t2tsw.bmatrix_double_rows_get, _t2tsw.bmatrix_double_rows_set)
    def __init__(self): 
        this = _t2tsw.new_bmatrix_double()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_bmatrix_double
    __del__ = lambda self : None;
bmatrix_double_swigregister = _t2tsw.bmatrix_double_swigregister
bmatrix_double_swigregister(bmatrix_double)

class bmatrix_str(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bmatrix_str, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bmatrix_str, name)
    __repr__ = _swig_repr
    __swig_setmethods__["vals"] = _t2tsw.bmatrix_str_vals_set
    __swig_getmethods__["vals"] = _t2tsw.bmatrix_str_vals_get
    if _newclass:vals = _swig_property(_t2tsw.bmatrix_str_vals_get, _t2tsw.bmatrix_str_vals_set)
    __swig_setmethods__["cols"] = _t2tsw.bmatrix_str_cols_set
    __swig_getmethods__["cols"] = _t2tsw.bmatrix_str_cols_get
    if _newclass:cols = _swig_property(_t2tsw.bmatrix_str_cols_get, _t2tsw.bmatrix_str_cols_set)
    __swig_setmethods__["rows"] = _t2tsw.bmatrix_str_rows_set
    __swig_getmethods__["rows"] = _t2tsw.bmatrix_str_rows_get
    if _newclass:rows = _swig_property(_t2tsw.bmatrix_str_rows_get, _t2tsw.bmatrix_str_rows_set)
    def __init__(self): 
        this = _t2tsw.new_bmatrix_str()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_bmatrix_str
    __del__ = lambda self : None;
bmatrix_str_swigregister = _t2tsw.bmatrix_str_swigregister
bmatrix_str_swigregister(bmatrix_str)

class t2tCmdPrms(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms, name)
    __repr__ = _swig_repr
    __swig_getmethods__["get_sample"] = _t2tsw.t2tCmdPrms_get_sample_get
    if _newclass:get_sample = _swig_property(_t2tsw.t2tCmdPrms_get_sample_get)
    __swig_getmethods__["get_sample_ext"] = _t2tsw.t2tCmdPrms_get_sample_ext_get
    if _newclass:get_sample_ext = _swig_property(_t2tsw.t2tCmdPrms_get_sample_ext_get)
    __swig_getmethods__["connect"] = _t2tsw.t2tCmdPrms_connect_get
    if _newclass:connect = _swig_property(_t2tsw.t2tCmdPrms_connect_get)
    __swig_getmethods__["start_calibration"] = _t2tsw.t2tCmdPrms_start_calibration_get
    if _newclass:start_calibration = _swig_property(_t2tsw.t2tCmdPrms_start_calibration_get)
    __swig_getmethods__["remove_calibration_samples"] = _t2tsw.t2tCmdPrms_remove_calibration_samples_get
    if _newclass:remove_calibration_samples = _swig_property(_t2tsw.t2tCmdPrms_remove_calibration_samples_get)
    __swig_getmethods__["calibration_analysis"] = _t2tsw.t2tCmdPrms_calibration_analysis_get
    if _newclass:calibration_analysis = _swig_property(_t2tsw.t2tCmdPrms_calibration_analysis_get)
    __swig_getmethods__["event"] = _t2tsw.t2tCmdPrms_event_get
    if _newclass:event = _swig_property(_t2tsw.t2tCmdPrms_event_get)
    __swig_getmethods__["save_data"] = _t2tsw.t2tCmdPrms_save_data_get
    if _newclass:save_data = _swig_property(_t2tsw.t2tCmdPrms_save_data_get)
    __swig_getmethods__["get_events_data"] = _t2tsw.t2tCmdPrms_get_events_data_get
    if _newclass:get_events_data = _swig_property(_t2tsw.t2tCmdPrms_get_events_data_get)
    __swig_getmethods__["get_gazes_data"] = _t2tsw.t2tCmdPrms_get_gazes_data_get
    if _newclass:get_gazes_data = _swig_property(_t2tsw.t2tCmdPrms_get_gazes_data_get)
    __swig_getmethods__["clear_data"] = _t2tsw.t2tCmdPrms_clear_data_get
    if _newclass:clear_data = _swig_property(_t2tsw.t2tCmdPrms_clear_data_get)
    __swig_getmethods__["get_status"] = _t2tsw.t2tCmdPrms_get_status_get
    if _newclass:get_status = _swig_property(_t2tsw.t2tCmdPrms_get_status_get)
    __swig_getmethods__["timestamp"] = _t2tsw.t2tCmdPrms_timestamp_get
    if _newclass:timestamp = _swig_property(_t2tsw.t2tCmdPrms_timestamp_get)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms
    __del__ = lambda self : None;
t2tCmdPrms_swigregister = _t2tsw.t2tCmdPrms_swigregister
t2tCmdPrms_swigregister(t2tCmdPrms)

class t2tCmdPrms_timestamp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_timestamp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_timestamp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["time"] = _t2tsw.t2tCmdPrms_timestamp_time_set
    __swig_getmethods__["time"] = _t2tsw.t2tCmdPrms_timestamp_time_get
    if _newclass:time = _swig_property(_t2tsw.t2tCmdPrms_timestamp_time_get, _t2tsw.t2tCmdPrms_timestamp_time_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_timestamp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_timestamp
    __del__ = lambda self : None;
t2tCmdPrms_timestamp_swigregister = _t2tsw.t2tCmdPrms_timestamp_swigregister
t2tCmdPrms_timestamp_swigregister(t2tCmdPrms_timestamp)

class t2tCmdPrms_get_status(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_get_status, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_get_status, name)
    __repr__ = _swig_repr
    __swig_setmethods__["get_history"] = _t2tsw.t2tCmdPrms_get_status_get_history_set
    __swig_getmethods__["get_history"] = _t2tsw.t2tCmdPrms_get_status_get_history_get
    if _newclass:get_history = _swig_property(_t2tsw.t2tCmdPrms_get_status_get_history_get, _t2tsw.t2tCmdPrms_get_status_get_history_set)
    __swig_setmethods__["st_matrix"] = _t2tsw.t2tCmdPrms_get_status_st_matrix_set
    __swig_getmethods__["st_matrix"] = _t2tsw.t2tCmdPrms_get_status_st_matrix_get
    if _newclass:st_matrix = _swig_property(_t2tsw.t2tCmdPrms_get_status_st_matrix_get, _t2tsw.t2tCmdPrms_get_status_st_matrix_set)
    __swig_setmethods__["hs_matrix"] = _t2tsw.t2tCmdPrms_get_status_hs_matrix_set
    __swig_getmethods__["hs_matrix"] = _t2tsw.t2tCmdPrms_get_status_hs_matrix_get
    if _newclass:hs_matrix = _swig_property(_t2tsw.t2tCmdPrms_get_status_hs_matrix_get, _t2tsw.t2tCmdPrms_get_status_hs_matrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_get_status()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_get_status
    __del__ = lambda self : None;
t2tCmdPrms_get_status_swigregister = _t2tsw.t2tCmdPrms_get_status_swigregister
t2tCmdPrms_get_status_swigregister(t2tCmdPrms_get_status)

class t2tCmdPrms_clear_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_clear_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_clear_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["up_sample_idx"] = _t2tsw.t2tCmdPrms_clear_data_up_sample_idx_set
    __swig_getmethods__["up_sample_idx"] = _t2tsw.t2tCmdPrms_clear_data_up_sample_idx_get
    if _newclass:up_sample_idx = _swig_property(_t2tsw.t2tCmdPrms_clear_data_up_sample_idx_get, _t2tsw.t2tCmdPrms_clear_data_up_sample_idx_set)
    __swig_setmethods__["up_event_idx"] = _t2tsw.t2tCmdPrms_clear_data_up_event_idx_set
    __swig_getmethods__["up_event_idx"] = _t2tsw.t2tCmdPrms_clear_data_up_event_idx_get
    if _newclass:up_event_idx = _swig_property(_t2tsw.t2tCmdPrms_clear_data_up_event_idx_get, _t2tsw.t2tCmdPrms_clear_data_up_event_idx_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_clear_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_clear_data
    __del__ = lambda self : None;
t2tCmdPrms_clear_data_swigregister = _t2tsw.t2tCmdPrms_clear_data_swigregister
t2tCmdPrms_clear_data_swigregister(t2tCmdPrms_clear_data)

class t2tCmdPrms_get_gazes_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_get_gazes_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_get_gazes_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["from_sample_idx"] = _t2tsw.t2tCmdPrms_get_gazes_data_from_sample_idx_set
    __swig_getmethods__["from_sample_idx"] = _t2tsw.t2tCmdPrms_get_gazes_data_from_sample_idx_get
    if _newclass:from_sample_idx = _swig_property(_t2tsw.t2tCmdPrms_get_gazes_data_from_sample_idx_get, _t2tsw.t2tCmdPrms_get_gazes_data_from_sample_idx_set)
    __swig_setmethods__["start_time"] = _t2tsw.t2tCmdPrms_get_gazes_data_start_time_set
    __swig_getmethods__["start_time"] = _t2tsw.t2tCmdPrms_get_gazes_data_start_time_get
    if _newclass:start_time = _swig_property(_t2tsw.t2tCmdPrms_get_gazes_data_start_time_get, _t2tsw.t2tCmdPrms_get_gazes_data_start_time_set)
    __swig_setmethods__["gmatrix"] = _t2tsw.t2tCmdPrms_get_gazes_data_gmatrix_set
    __swig_getmethods__["gmatrix"] = _t2tsw.t2tCmdPrms_get_gazes_data_gmatrix_get
    if _newclass:gmatrix = _swig_property(_t2tsw.t2tCmdPrms_get_gazes_data_gmatrix_get, _t2tsw.t2tCmdPrms_get_gazes_data_gmatrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_get_gazes_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_get_gazes_data
    __del__ = lambda self : None;
t2tCmdPrms_get_gazes_data_swigregister = _t2tsw.t2tCmdPrms_get_gazes_data_swigregister
t2tCmdPrms_get_gazes_data_swigregister(t2tCmdPrms_get_gazes_data)

class t2tCmdPrms_get_events_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_get_events_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_get_events_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["from_event_idx"] = _t2tsw.t2tCmdPrms_get_events_data_from_event_idx_set
    __swig_getmethods__["from_event_idx"] = _t2tsw.t2tCmdPrms_get_events_data_from_event_idx_get
    if _newclass:from_event_idx = _swig_property(_t2tsw.t2tCmdPrms_get_events_data_from_event_idx_get, _t2tsw.t2tCmdPrms_get_events_data_from_event_idx_set)
    __swig_setmethods__["start_time"] = _t2tsw.t2tCmdPrms_get_events_data_start_time_set
    __swig_getmethods__["start_time"] = _t2tsw.t2tCmdPrms_get_events_data_start_time_get
    if _newclass:start_time = _swig_property(_t2tsw.t2tCmdPrms_get_events_data_start_time_get, _t2tsw.t2tCmdPrms_get_events_data_start_time_set)
    __swig_setmethods__["num_matrix"] = _t2tsw.t2tCmdPrms_get_events_data_num_matrix_set
    __swig_getmethods__["num_matrix"] = _t2tsw.t2tCmdPrms_get_events_data_num_matrix_get
    if _newclass:num_matrix = _swig_property(_t2tsw.t2tCmdPrms_get_events_data_num_matrix_get, _t2tsw.t2tCmdPrms_get_events_data_num_matrix_set)
    __swig_setmethods__["str_matrix"] = _t2tsw.t2tCmdPrms_get_events_data_str_matrix_set
    __swig_getmethods__["str_matrix"] = _t2tsw.t2tCmdPrms_get_events_data_str_matrix_get
    if _newclass:str_matrix = _swig_property(_t2tsw.t2tCmdPrms_get_events_data_str_matrix_get, _t2tsw.t2tCmdPrms_get_events_data_str_matrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_get_events_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_get_events_data
    __del__ = lambda self : None;
t2tCmdPrms_get_events_data_swigregister = _t2tsw.t2tCmdPrms_get_events_data_swigregister
t2tCmdPrms_get_events_data_swigregister(t2tCmdPrms_get_events_data)

class t2tCmdPrms_save_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_save_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_save_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["eye_tracking_fname"] = _t2tsw.t2tCmdPrms_save_data_eye_tracking_fname_set
    __swig_getmethods__["eye_tracking_fname"] = _t2tsw.t2tCmdPrms_save_data_eye_tracking_fname_get
    if _newclass:eye_tracking_fname = _swig_property(_t2tsw.t2tCmdPrms_save_data_eye_tracking_fname_get, _t2tsw.t2tCmdPrms_save_data_eye_tracking_fname_set)
    __swig_setmethods__["events_fname"] = _t2tsw.t2tCmdPrms_save_data_events_fname_set
    __swig_getmethods__["events_fname"] = _t2tsw.t2tCmdPrms_save_data_events_fname_get
    if _newclass:events_fname = _swig_property(_t2tsw.t2tCmdPrms_save_data_events_fname_get, _t2tsw.t2tCmdPrms_save_data_events_fname_set)
    __swig_setmethods__["mode"] = _t2tsw.t2tCmdPrms_save_data_mode_set
    __swig_getmethods__["mode"] = _t2tsw.t2tCmdPrms_save_data_mode_get
    if _newclass:mode = _swig_property(_t2tsw.t2tCmdPrms_save_data_mode_get, _t2tsw.t2tCmdPrms_save_data_mode_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_save_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_save_data
    __del__ = lambda self : None;
t2tCmdPrms_save_data_swigregister = _t2tsw.t2tCmdPrms_save_data_swigregister
t2tCmdPrms_save_data_swigregister(t2tCmdPrms_save_data)

class t2tCmdPrms_event(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_event, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_event, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _t2tsw.t2tCmdPrms_event_name_set
    __swig_getmethods__["name"] = _t2tsw.t2tCmdPrms_event_name_get
    if _newclass:name = _swig_property(_t2tsw.t2tCmdPrms_event_name_get, _t2tsw.t2tCmdPrms_event_name_set)
    __swig_setmethods__["start_time"] = _t2tsw.t2tCmdPrms_event_start_time_set
    __swig_getmethods__["start_time"] = _t2tsw.t2tCmdPrms_event_start_time_get
    if _newclass:start_time = _swig_property(_t2tsw.t2tCmdPrms_event_start_time_get, _t2tsw.t2tCmdPrms_event_start_time_set)
    __swig_setmethods__["duration"] = _t2tsw.t2tCmdPrms_event_duration_set
    __swig_getmethods__["duration"] = _t2tsw.t2tCmdPrms_event_duration_get
    if _newclass:duration = _swig_property(_t2tsw.t2tCmdPrms_event_duration_get, _t2tsw.t2tCmdPrms_event_duration_set)
    __swig_setmethods__["fields"] = _t2tsw.t2tCmdPrms_event_fields_set
    __swig_getmethods__["fields"] = _t2tsw.t2tCmdPrms_event_fields_get
    if _newclass:fields = _swig_property(_t2tsw.t2tCmdPrms_event_fields_get, _t2tsw.t2tCmdPrms_event_fields_set)
    __swig_setmethods__["values"] = _t2tsw.t2tCmdPrms_event_values_set
    __swig_getmethods__["values"] = _t2tsw.t2tCmdPrms_event_values_get
    if _newclass:values = _swig_property(_t2tsw.t2tCmdPrms_event_values_get, _t2tsw.t2tCmdPrms_event_values_set)
    __swig_setmethods__["nfields"] = _t2tsw.t2tCmdPrms_event_nfields_set
    __swig_getmethods__["nfields"] = _t2tsw.t2tCmdPrms_event_nfields_get
    if _newclass:nfields = _swig_property(_t2tsw.t2tCmdPrms_event_nfields_get, _t2tsw.t2tCmdPrms_event_nfields_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_event()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_event
    __del__ = lambda self : None;
t2tCmdPrms_event_swigregister = _t2tsw.t2tCmdPrms_event_swigregister
t2tCmdPrms_event_swigregister(t2tCmdPrms_event)

class t2tCmdPrms_calibration_analysis(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_calibration_analysis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_calibration_analysis, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cmatrix"] = _t2tsw.t2tCmdPrms_calibration_analysis_cmatrix_set
    __swig_getmethods__["cmatrix"] = _t2tsw.t2tCmdPrms_calibration_analysis_cmatrix_get
    if _newclass:cmatrix = _swig_property(_t2tsw.t2tCmdPrms_calibration_analysis_cmatrix_get, _t2tsw.t2tCmdPrms_calibration_analysis_cmatrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_calibration_analysis()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_calibration_analysis
    __del__ = lambda self : None;
t2tCmdPrms_calibration_analysis_swigregister = _t2tsw.t2tCmdPrms_calibration_analysis_swigregister
t2tCmdPrms_calibration_analysis_swigregister(t2tCmdPrms_calibration_analysis)

class t2tCmdPrms_remove_calibration_samples(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_remove_calibration_samples, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_remove_calibration_samples, name)
    __repr__ = _swig_repr
    __swig_setmethods__["rmatrix"] = _t2tsw.t2tCmdPrms_remove_calibration_samples_rmatrix_set
    __swig_getmethods__["rmatrix"] = _t2tsw.t2tCmdPrms_remove_calibration_samples_rmatrix_get
    if _newclass:rmatrix = _swig_property(_t2tsw.t2tCmdPrms_remove_calibration_samples_rmatrix_get, _t2tsw.t2tCmdPrms_remove_calibration_samples_rmatrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_remove_calibration_samples()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_remove_calibration_samples
    __del__ = lambda self : None;
t2tCmdPrms_remove_calibration_samples_swigregister = _t2tsw.t2tCmdPrms_remove_calibration_samples_swigregister
t2tCmdPrms_remove_calibration_samples_swigregister(t2tCmdPrms_remove_calibration_samples)

class t2tCmdPrms_start_calibration(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_start_calibration, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_start_calibration, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cmatrix"] = _t2tsw.t2tCmdPrms_start_calibration_cmatrix_set
    __swig_getmethods__["cmatrix"] = _t2tsw.t2tCmdPrms_start_calibration_cmatrix_get
    if _newclass:cmatrix = _swig_property(_t2tsw.t2tCmdPrms_start_calibration_cmatrix_get, _t2tsw.t2tCmdPrms_start_calibration_cmatrix_set)
    __swig_setmethods__["load_from_file"] = _t2tsw.t2tCmdPrms_start_calibration_load_from_file_set
    __swig_getmethods__["load_from_file"] = _t2tsw.t2tCmdPrms_start_calibration_load_from_file_get
    if _newclass:load_from_file = _swig_property(_t2tsw.t2tCmdPrms_start_calibration_load_from_file_get, _t2tsw.t2tCmdPrms_start_calibration_load_from_file_set)
    __swig_setmethods__["clear_previous"] = _t2tsw.t2tCmdPrms_start_calibration_clear_previous_set
    __swig_getmethods__["clear_previous"] = _t2tsw.t2tCmdPrms_start_calibration_clear_previous_get
    if _newclass:clear_previous = _swig_property(_t2tsw.t2tCmdPrms_start_calibration_clear_previous_get, _t2tsw.t2tCmdPrms_start_calibration_clear_previous_set)
    __swig_setmethods__["samples_per_point"] = _t2tsw.t2tCmdPrms_start_calibration_samples_per_point_set
    __swig_getmethods__["samples_per_point"] = _t2tsw.t2tCmdPrms_start_calibration_samples_per_point_get
    if _newclass:samples_per_point = _swig_property(_t2tsw.t2tCmdPrms_start_calibration_samples_per_point_get, _t2tsw.t2tCmdPrms_start_calibration_samples_per_point_set)
    __swig_setmethods__["fname"] = _t2tsw.t2tCmdPrms_start_calibration_fname_set
    __swig_getmethods__["fname"] = _t2tsw.t2tCmdPrms_start_calibration_fname_get
    if _newclass:fname = _swig_property(_t2tsw.t2tCmdPrms_start_calibration_fname_get, _t2tsw.t2tCmdPrms_start_calibration_fname_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_start_calibration()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_start_calibration
    __del__ = lambda self : None;
t2tCmdPrms_start_calibration_swigregister = _t2tsw.t2tCmdPrms_start_calibration_swigregister
t2tCmdPrms_start_calibration_swigregister(t2tCmdPrms_start_calibration)

class t2tCmdPrms_connect(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_connect, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_connect, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ip_address"] = _t2tsw.t2tCmdPrms_connect_ip_address_set
    __swig_getmethods__["ip_address"] = _t2tsw.t2tCmdPrms_connect_ip_address_get
    if _newclass:ip_address = _swig_property(_t2tsw.t2tCmdPrms_connect_ip_address_get, _t2tsw.t2tCmdPrms_connect_ip_address_set)
    __swig_setmethods__["port"] = _t2tsw.t2tCmdPrms_connect_port_set
    __swig_getmethods__["port"] = _t2tsw.t2tCmdPrms_connect_port_get
    if _newclass:port = _swig_property(_t2tsw.t2tCmdPrms_connect_port_get, _t2tsw.t2tCmdPrms_connect_port_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_connect()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_connect
    __del__ = lambda self : None;
t2tCmdPrms_connect_swigregister = _t2tsw.t2tCmdPrms_connect_swigregister
t2tCmdPrms_connect_swigregister(t2tCmdPrms_connect)

class t2tCmdPrms_get_sample_ext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_get_sample_ext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_get_sample_ext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["smatrix"] = _t2tsw.t2tCmdPrms_get_sample_ext_smatrix_set
    __swig_getmethods__["smatrix"] = _t2tsw.t2tCmdPrms_get_sample_ext_smatrix_get
    if _newclass:smatrix = _swig_property(_t2tsw.t2tCmdPrms_get_sample_ext_smatrix_get, _t2tsw.t2tCmdPrms_get_sample_ext_smatrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_get_sample_ext()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_get_sample_ext
    __del__ = lambda self : None;
t2tCmdPrms_get_sample_ext_swigregister = _t2tsw.t2tCmdPrms_get_sample_ext_swigregister
t2tCmdPrms_get_sample_ext_swigregister(t2tCmdPrms_get_sample_ext)

class t2tCmdPrms_get_sample(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmdPrms_get_sample, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmdPrms_get_sample, name)
    __repr__ = _swig_repr
    __swig_setmethods__["smatrix"] = _t2tsw.t2tCmdPrms_get_sample_smatrix_set
    __swig_getmethods__["smatrix"] = _t2tsw.t2tCmdPrms_get_sample_smatrix_get
    if _newclass:smatrix = _swig_property(_t2tsw.t2tCmdPrms_get_sample_smatrix_get, _t2tsw.t2tCmdPrms_get_sample_smatrix_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmdPrms_get_sample()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmdPrms_get_sample
    __del__ = lambda self : None;
t2tCmdPrms_get_sample_swigregister = _t2tsw.t2tCmdPrms_get_sample_swigregister
t2tCmdPrms_get_sample_swigregister(t2tCmdPrms_get_sample)

class t2tCmd(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, t2tCmd, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, t2tCmd, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cmd"] = _t2tsw.t2tCmd_cmd_set
    __swig_getmethods__["cmd"] = _t2tsw.t2tCmd_cmd_get
    if _newclass:cmd = _swig_property(_t2tsw.t2tCmd_cmd_get, _t2tsw.t2tCmd_cmd_set)
    __swig_setmethods__["prm"] = _t2tsw.t2tCmd_prm_set
    __swig_getmethods__["prm"] = _t2tsw.t2tCmd_prm_get
    if _newclass:prm = _swig_property(_t2tsw.t2tCmd_prm_get, _t2tsw.t2tCmd_prm_set)
    def __init__(self): 
        this = _t2tsw.new_t2tCmd()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _t2tsw.delete_t2tCmd
    __del__ = lambda self : None;
t2tCmd_swigregister = _t2tsw.t2tCmd_swigregister
t2tCmd_swigregister(t2tCmd)


def bmatrix_double_free(*args):
  return _t2tsw.bmatrix_double_free(*args)
bmatrix_double_free = _t2tsw.bmatrix_double_free

def bmatrix_str_free(*args):
  return _t2tsw.bmatrix_str_free(*args)
bmatrix_str_free = _t2tsw.bmatrix_str_free

def t2tCmdDemux(*args):
  return _t2tsw.t2tCmdDemux(*args)
t2tCmdDemux = _t2tsw.t2tCmdDemux

def t2tCmdOutputDispose(*args):
  return _t2tsw.t2tCmdOutputDispose(*args)
t2tCmdOutputDispose = _t2tsw.t2tCmdOutputDispose

def t2tOutputFileName(*args):
  return _t2tsw.t2tOutputFileName(*args)
t2tOutputFileName = _t2tsw.t2tOutputFileName


